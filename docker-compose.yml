version: "3.3"

services:
  # production containers
  scraper:
    build: ./scraper
    container_name: scraper
    volumes:
      - scraper-data:/data/scraped/

  mongo:
    image: mongo:4.4.1
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: upa
      MONGO_INITDB_ROOT_PASSWORD: upa
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  # TODO: container for data computation

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:12.4
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: upa
      POSTGRES_PASSWORD: upa
      POSTGRES_DB: upa
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  superset:
    build: ./superset
    container_name: superset
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
    ports:
      - 8088:8088
    volumes:
      - ./superset/config.py:/etc/superset/superset_config.py

  # admin containers
  mongo-admin:
    image: mongo-express
    container_name: mongo-admin
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: upa
      ME_CONFIG_MONGODB_ADMINPASSWORD: upa

  postgres-admin:
    container_name: postgres-admin
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - 8082:8080

volumes:
  mongo-data:
  postgres-data:
  scraper-data:
  redis-data:
